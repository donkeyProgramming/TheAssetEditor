<UserControl x:Class="CommonControls.Editors.BoneMapping.View.BoneMappingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:s="http://schemas.singulink.com/xaml"
             xmlns:behaviors="clr-namespace:CommonControls.Behaviors" 
             xmlns:mathviews="clr-namespace:CommonControls.MathViews"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>

        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                            <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BoneTreeViewStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="IsExpanded" Value="True"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Visibility" Value="Visible" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Grid.Column="1" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>

                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding IsVisible.Value}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Column="0" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel  Grid.Row="0" Orientation="Horizontal">
                <TextBlock  Text="Current model bones - " FontWeight="Bold" FontSize="16" TextDecorations="Underline"/>
                <TextBlock  Text="{Binding MeshSkeletonName.Value, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" FontSize="16" TextDecorations="Underline"/>
            </StackPanel>


            <TextBox Grid.Row="1" BorderBrush="Black" Text="{Binding MeshBones.Filter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
            <Button Grid.Row="1" Grid.Column ="1"  Content="Clear" IsEnabled="False" />


            <CheckBox Grid.Row="2" VerticalContentAlignment="Center"
                      Content="Only show used bones"
                      IsChecked="{Binding OnlyShowUsedBones.Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

            <TreeView 
                Grid.Row="3"
                Grid.ColumnSpan="2"
                HorizontalContentAlignment="Stretch" 
                ItemsSource="{Binding MeshBones.Values}" 
                ItemContainerStyle="{StaticResource BoneTreeViewStyle}">

                <b:Interaction.Behaviors>
                    <behaviors:BindableSelectedItemBehavior SelectedItem="{Binding MeshBones.SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </b:Interaction.Behaviors>

                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <Grid HorizontalAlignment="Stretch" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0" Orientation="Horizontal">
                                <TextBlock  
                                            Text="{Binding Name.Value}"
                                            Foreground="{Binding IsUsedByCurrentModel.Value, UpdateSourceTrigger=PropertyChanged , Converter={StaticResource BoolToColour_white_gray}}"/>
                                <TextBlock  
                                        Text="["
                                        Foreground="{Binding IsUsedByCurrentModel.Value, UpdateSourceTrigger=PropertyChanged , Converter={StaticResource BoolToColour_white_gray}}"/>

                                <TextBlock  
                                        Text="{Binding BoneIndex.Value}"
                                        Foreground="{Binding IsUsedByCurrentModel.Value, UpdateSourceTrigger=PropertyChanged , Converter={StaticResource BoolToColour_white_gray}}"/>

                                <TextBlock  
                                        Text="]"
                                        Foreground="{Binding IsUsedByCurrentModel.Value, UpdateSourceTrigger=PropertyChanged , Converter={StaticResource BoolToColour_white_gray}}"/>
                            </StackPanel>

                            <StackPanel Grid.Column="1" Orientation="Horizontal">
                                <TextBlock  
                                            Text="{Binding MappedBoneName.Value}"
                                            Foreground="{Binding IsUsedByCurrentModel.Value, UpdateSourceTrigger=PropertyChanged , Converter={StaticResource BoolToColour_white_gray}}"/>
                                <TextBlock  
                                        Text="["
                                        Foreground="{Binding IsUsedByCurrentModel.Value, UpdateSourceTrigger=PropertyChanged , Converter={StaticResource BoolToColour_white_gray}}"/>

                                <TextBlock  
                                        Text="{Binding MappedBoneIndex.Value}"
                                        Foreground="{Binding IsUsedByCurrentModel.Value, UpdateSourceTrigger=PropertyChanged , Converter={StaticResource BoolToColour_white_gray}}"/>

                                <TextBlock  
                                        Text="]"
                                        Foreground="{Binding IsUsedByCurrentModel.Value, UpdateSourceTrigger=PropertyChanged , Converter={StaticResource BoolToColour_white_gray}}"/>
                            </StackPanel>
                        </Grid>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
            <StackPanel Grid.Row="4" Grid.ColumnSpan="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".5*"/>
                        <ColumnDefinition Width=".5*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0"  Click="{s:MethodBinding AutoMapSelfAndChildrenByName}" Content="Auto map based on name" Margin="0,0,2,0"/>
                    <Button Grid.Column="1" Click="{s:MethodBinding AutoMapSelfAndChildrenByHierarchy}" Content="Auto map based on hierarchy"/>
                </Grid>
                <Grid Margin="0,2,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".5*"/>
                        <ColumnDefinition Width=".5*"/>
                        <ColumnDefinition Width=".5*"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Click="{s:MethodBinding ClearBindingSelf}" Content="Delete self"/>
                    <Button Grid.Column="1" Click="{s:MethodBinding ClearBindingSelfAndChildren}" Content="Delete self and children" Margin="2,0,2,0"/>
                    <Button Grid.Column="2" Click="{s:MethodBinding CopyMappingToAllChildren}" Content="Copy to to all children"/>
                </Grid>
            </StackPanel>

        </Grid>

        <Grid Grid.Column="2" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel  Grid.Row="0" Orientation="Horizontal">
                <TextBlock  Text="Target Model Bones - " FontWeight="Bold" FontSize="16" TextDecorations="Underline"/>
                <TextBlock  Text="{Binding ParentSkeletonName.Value, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" FontSize="16" TextDecorations="Underline"/>
            </StackPanel>

            <TextBox Grid.Row="1" BorderBrush="Black" Text="{Binding ParentModelBones.Filter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
            <Button Grid.Row="1" Grid.Column ="1"  Content="Clear" IsEnabled="False"/>
            <TreeView 
                Grid.Row="2"
                Grid.ColumnSpan="2"
                HorizontalContentAlignment="Stretch" 
                ItemsSource="{Binding ParentModelBones.Values}" 
                ItemContainerStyle="{StaticResource BoneTreeViewStyle}">

                <b:Interaction.Behaviors>
                    <behaviors:BindableSelectedItemBehavior SelectedItem="{Binding ParentModelBones.SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </b:Interaction.Behaviors>

                <TreeView.ItemTemplate >
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock  Text="{Binding Name.Value}"/>
                        </StackPanel>

                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </Grid>

        <Grid Grid.Row="1" Grid.ColumnSpan="3"  Visibility="{Binding ShowTransformSection.Value, UpdateSourceTrigger=PropertyChanged , Converter={StaticResource BoolToHiddenConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="6"/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition Height="5"/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Row="0" Grid.ColumnSpan="4" Background="Gray" BorderThickness="2" />

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Root scale"/>
            <TextBlock Grid.Row="1" Grid.Column="1" Text=":"/>
            <TextBox Grid.Row="1" Grid.Column="2"  Width="116" Text="{Binding ScaleFactor.TextValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalContentAlignment="Center" HorizontalAlignment="Left" Margin="2" >
                <b:Interaction.Behaviors>
                    <behaviors:TextBoxInputBehavior InputMode="DecimalInput"/>
                </b:Interaction.Behaviors>
            </TextBox>

            <TextBlock Grid.Row="2" Grid.Column="0" Text="Only move selected bone "/>
            <TextBlock Grid.Row="2" Grid.Column="1" Text=":"/>
            <CheckBox Grid.Row="2" Grid.Column="2" IsChecked="{Binding OnlyMOveSelectedBone.Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" IsEnabled="False"/>

            <TextBlock Grid.Row="3" Grid.Column="0" Text="Relative Scale:"/>
            <TextBlock Grid.Row="3" Grid.Column="1" Text=":"/>
            <CheckBox Grid.Row="3" Grid.Column="2" IsChecked="{Binding RelativeScale.Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

            <TextBlock Grid.Row="4" Grid.Column="0" Text="Display offset"/>
            <TextBlock Grid.Row="4" Grid.Column="1" Text=":"/>
            <mathviews:Vector3View Grid.Row="4" Grid.Column="2" Width="350" VerticalContentAlignment="Center" Vector3="{Binding SkeletonDisplayOffset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="2" HorizontalAlignment="Left"/>

            <Border Grid.Row="5" Grid.ColumnSpan="3" Background="Gray" BorderThickness="2"/>

            <TextBlock Grid.Row="6" Grid.Column="0" Text="Pos offset"/>
            <TextBlock Grid.Row="6" Grid.Column="1" Text=":"/>
            <mathviews:Vector3View Grid.Row="6" Grid.Column="2" Width="350" VerticalContentAlignment="Center" Vector3="{Binding BonePositionOffset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="2" HorizontalAlignment="Left" IsEnabled="{Binding IsBoneSelected.Value, UpdateSourceTrigger=PropertyChanged}"/>

            <TextBlock Grid.Row="7" Grid.Column="0" Text="Rot offset"/>
            <TextBlock Grid.Row="7" Grid.Column="1" Text=":"/>
            <mathviews:Vector3View Grid.Row="7" Grid.Column="2" Width="350" VerticalContentAlignment="Center" Vector3="{Binding BoneRotationOffset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="2" HorizontalAlignment="Left" IsEnabled="{Binding IsBoneSelected.Value, UpdateSourceTrigger=PropertyChanged}"/>

            <TextBlock Grid.Row="8" Grid.Column="0" Text="Scale"/>
            <TextBlock Grid.Row="8" Grid.Column="1" Text=":"/>
            <TextBox Grid.Row="8" Grid.Column="2"  Width="116" Text="{Binding BoneScaleFactor.TextValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalContentAlignment="Center" HorizontalAlignment="Left" Margin="2" IsEnabled="{Binding IsBoneSelected.Value, UpdateSourceTrigger=PropertyChanged}">
                <b:Interaction.Behaviors>
                    <behaviors:TextBoxInputBehavior InputMode="DecimalInput"/>
                </b:Interaction.Behaviors>
            </TextBox>
            <Button Grid.Row="8" Grid.Column="3" HorizontalAlignment="Left" Content="Copy to children"  Click="{s:MethodBinding CopyScaleToChildren}"/>

            <Button Grid.Row="9" Grid.Column="2" Content="Reset offsets" Margin="2" Click="{s:MethodBinding ResetOffsetTransforms}"/>
        </Grid>

        <DockPanel Grid.Row="2" Grid.ColumnSpan="3" DockPanel.Dock="Right" LastChildFill="False">
            <Button x:Name="ApplyButtonHandle" DockPanel.Dock="Right" Width="50" Click="{s:MethodBinding OnApplyButton}" Visibility="{Binding ShowApplyButton.Value, UpdateSourceTrigger=PropertyChanged , Converter={StaticResource BoolToHiddenConverter}}">Apply</Button>
            <Button DockPanel.Dock="Right" Width="50" Margin="5,0,5,0" Click="{s:MethodBinding OnOkButton}">Ok</Button>
            <Button DockPanel.Dock="Right" Width="50" Click="{s:MethodBinding OnCancelButton}">Cancel</Button>
        </DockPanel>

    </Grid>
</UserControl>
