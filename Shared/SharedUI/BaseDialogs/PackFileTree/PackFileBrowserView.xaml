<UserControl x:Class="Shared.Ui.BaseDialogs.PackFileTree.PackFileBrowserView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:behaviors="clr-namespace:Shared.Ui.Common.Behaviors"
             xmlns:e1="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:nodevalueconverters="clr-namespace:Shared.Ui.BaseDialogs.PackFileTree" 
             xmlns:packfiletree="clr-namespace:Shared.Ui.BaseDialogs.PackFileTree" 
             xmlns:valueconverters="clr-namespace:Shared.Ui.BaseDialogs.PackFileTree.ValueConverters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             x:Name="mystuff">

    <UserControl.Resources>
        <valueconverters:PackFileToImageValueConverter x:Key="ImageValueConverter"/>
        <valueconverters:SortedCollectionViewSource x:Key="SortedCollectionViewSource" Property0="NodeType" Property1="Name"/>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- Title -->
        <TextBlock Text="PackFile Explorer" FontSize="12" HorizontalAlignment="Left" Margin="0, 5, 5, 5" Grid.Row="0"/>

        <!-- Search and Clear Button -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border SnapsToDevicePixels="true" BorderBrush="{DynamicResource TextBox.Static.Border}" BorderThickness="1">
                <Grid>
                    <TextBox x:Name="FilterTextBoxItem" Style="{StaticResource HintedTextBox}" KeyboardNavigation.TabIndex="0" FontSize="12" BorderThickness="0"
                             KeyboardNavigation.IsTabStop="True" HorizontalAlignment="Stretch" Padding="2.5, 0, 0, 0"  Height="24" VerticalContentAlignment="Center" 
                             Text="{Binding Filter.FilterText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Delay=350, ValidatesOnDataErrors=True}"
                             Tag="Search PackFile Explorer (Ctrl+Shift+F)">
                    </TextBox>

                    <Button Click="ClearButtonClick" Command="{Binding ClearTextCommand}" Padding="2" Width="24" Height="24" HorizontalAlignment="Right" 
                            VerticalContentAlignment="Center" HorizontalContentAlignment="Center" VerticalAlignment="Center">
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Grid SnapsToDevicePixels="true" Background="{DynamicResource TextBox.Static.Background}">
                                    <Path Data="M0,0 L8,8 M8,0 L0,8" StrokeThickness="1.5" VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Path.Style>
                                            <Style TargetType="{x:Type Path}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="False">
                                                        <Setter Property="Stroke" Value="{DynamicResource Button.Disabled.Foreground}" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Stroke" Value="{DynamicResource Button.Static.Foreground}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                </Grid>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Grid>
            </Border>
        </Grid>

        <!-- TreeView -->
        <TreeView x:Name="tvParameters" AllowDrop="True" Grid.Row="2" Margin="0, 2.5, 0, 5" behaviors:TreeViewExtension.SelectItemOnRightClick="True" 
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Path=Files, UpdateSourceTrigger=PropertyChanged}" 
                  VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                  BorderBrush="Transparent" Background="Transparent">

            <TreeView.Resources>
                <ContextMenu x:Key="NodeContextMenu" ItemsSource="{Binding DataContext.ContextMenu, UpdateSourceTrigger=PropertyChanged,  RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" DisplayMemberPath="Name">
                    <ContextMenu.Resources>
                        <ControlTemplate x:Key="MenuSeparatorTemplate">
                            <Separator />
                        </ControlTemplate>
                    </ContextMenu.Resources>

                    <ContextMenu.Style>
                        <Style TargetType="ContextMenu" BasedOn="{StaticResource {x:Type ContextMenu}}"  />
                    </ContextMenu.Style>

                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}"  >
                            <Setter Property="Command" Value="{Binding Command}"/>
                            <Setter Property="ItemsSource" Value="{Binding ContextMenu}"/>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding }" Value="{x:Null}">
                                    <Setter Property="Template" Value="{StaticResource MenuSeparatorTemplate}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                </ContextMenu>
            </TreeView.Resources>

            <e1:Interaction.Behaviors>
                <behaviors:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
            </e1:Interaction.Behaviors>

            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                    <EventSetter Event="TreeViewItem.MouseMove" Handler="treeView_MouseMove"/>
                    <EventSetter Event="TreeViewItem.Drop" Handler="treeView_Drop"/>
                    <EventSetter Event="TreeViewItem.PreviewMouseLeftButtonDown" Handler="TreeView_MouseDown"/>
                    <EventSetter Event="TreeViewItem.PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                    <Setter Property="behaviors:MouseDoubleClick.Command" Value="{Binding DataContext.DoubleClickCommand,  RelativeSource={RelativeSource FindAncestor, AncestorType=TreeView}, Mode=OneTime}"/>
                    <Setter Property="ContextMenu" Value="{StaticResource NodeContextMenu}"/>
                    <Setter Property="IsExpanded" Value="{Binding IsNodeExpanded, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <Setter Property="Visibility" Value="Visible" />
                    <Setter Property="Foreground" Value="Red"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsVisible}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMainEditabelPack, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMainEditabelPack, UpdateSourceTrigger=PropertyChanged}" Value="False">
                            <Setter Property="FontWeight" Value="Normal" />
                        </DataTrigger>
                    </Style.Triggers>

                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.ItemTemplate >
                <HierarchicalDataTemplate ItemsSource="{Binding Children, Converter={StaticResource SortedCollectionViewSource}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Image Width="12" Grid.Column="0" Source="{Binding Path=., Converter={StaticResource ImageValueConverter}, Mode=OneTime}"/>
                        <TextBlock Grid.Column="1" Text="{Binding UnsavedChanged, Converter={StaticResource BoolToChangedPrefixStr}, UpdateSourceTrigger=PropertyChanged}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding UnsavedChanged, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding UnsavedChanged, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource ABrush.Glyph.Static}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Margin="4,0,0,0" Grid.Column="2" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding UnsavedChanged, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding UnsavedChanged, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource ABrush.Glyph.Static}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</UserControl>